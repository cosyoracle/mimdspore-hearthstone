Archmage	NAME_END	4	ATK_END	7	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	Archmage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Archmage	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	7	^	^	kind	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
BootyBayBodyguard	NAME_END	5	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	BootyBayBodyguard	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	BootyBayBodyguard	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	5	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
DarkscaleHealer	NAME_END	4	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Restore	2	Health	to	all	friendly	characters	.
Module	body	ClassDef	name	DarkscaleHealer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	DarkscaleHealer	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
FieryWarAxe	NAME_END	3	ATK_END	-1	DEF_END	2	COST_END	2	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	FieryWarAxe	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	FieryWarAxe	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
FrostwolfWarlord	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Gain	+	1	/	+	1	for	each	other	friendly	minion	on	the	battlefield	.
Module	body	ClassDef	name	FrostwolfWarlord	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	FrostwolfWarlord	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Hellfire	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	3	damage	to	ALL	characters	.
Module	body	ClassDef	name	Hellfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Hellfire	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Innervate	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Gain	2	Mana	Crystals	this	turn	only	.
Module	body	ClassDef	name	Innervate	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Innervate	^	^	kind	^	^	Constant	value	0	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	ops	Lt	^	^	comparators	Constant	value	8	^	^	kind	^	^	^	^	^	body	AugAssign	target	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	op	Add	^	^	value	Constant	value	2	^	^	kind	^	^	^	^	^	orelse	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	value	Constant	value	10	^	^	kind	^	^	^	type_comment	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
MagmaRager	NAME_END	5	ATK_END	1	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	MagmaRager	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	MagmaRager	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	5	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
MortalCoil	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	to	a	minion	.	If	that	kills	it	,	draw	a	card	.
Module	body	ClassDef	name	MortalCoil	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	MortalCoil	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	ops	LtE	^	^	comparators	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	divine_shield	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Polymorph	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Transform	a	minion	into	a	1	/	1	Sheep	.
Module	body	ClassDef	name	Polymorph	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Polymorph	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ImportFrom	module	hearthbreaker.cards.minions.mage	^	^	names	alias	name	Sheep	^	^	asname	^	^	^	level	0	^	^	^	Assign	targets	Name	id	sheep	^	^	^	^	value	Call	func	Name	id	Sheep	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Assign	targets	Name	id	minion	^	^	^	^	value	Call	func	Attribute	value	Name	id	sheep	^	^	^	^	attr	create_minion	^	^	^	^	args	Constant	value	^	kind	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	value	Name	id	sheep	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	replace	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SearingTotem	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	SearingTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SearingTotem	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	Constant	value	False	^	^	kind	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SilverbackPatriarch	NAME_END	1	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	SilverbackPatriarch	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SilverbackPatriarch	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
StormwindKnight	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	StormwindKnight	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	StormwindKnight	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	keyword	arg	charge	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
VoodooDoctor	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Battlecry	</b>	Restore	2	Health	.
Module	body	ClassDef	name	VoodooDoctor	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	VoodooDoctor	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
WrathOfAirTotem	NAME_END	0	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Free	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	WrathOfAirTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	WrathofAirTotem	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	Constant	value	False	^	^	kind	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	0	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
AstralCommunion	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Gain	10	Mana	Crystals	.	Discard	your	hand	.
Module	body	ClassDef	name	AstralCommunion	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	AstralCommunion	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	card	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	unattach	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	trigger	^	^	^	^	args	Constant	value	card_discarded	^	^	kind	^	^	Name	id	card	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	value	List	elts	empty	^	^	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	max_mana	^	^	^	^	value	Constant	value	10	^	^	kind	^	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	value	Constant	value	10	^	^	kind	^	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
AnnoyoTron	NAME_END	1	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Taunt	</b>	NL	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	AnnoyoTron	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	AnnoyoTron	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
BurlyRockjawTrogg	NAME_END	3	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	your	opponent	casts	a	spell	,	gain	+	2	Attack	.
Module	body	ClassDef	name	BurlyRockjawTrogg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	BurlyRockjawTrogg	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
CogmastersWrench	NAME_END	1	ATK_END	-1	DEF_END	3	COST_END	3	DUR_END	Weapon	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Has	+	2	Attack	while	you	have	a	Mech	.
Module	body	ClassDef	name	CogmastersWrench	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	CogmastersWrench	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Constant	value	0	^	^	kind	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
EchoOfMedivh	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Put	a	copy	of	each	friendly	minion	into	your	hand	.
Module	body	ClassDef	name	EchoOfMedivh	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	EchoofMedivh	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Name	id	sorted	^	^	^	^	args	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	key	^	^	value	Lambda	args	arguments	posonlyargs	empty	^	^	args	arg	arg	minion	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Attribute	value	Name	id	minion	^	^	^	^	attr	born	^	^	^	^	^	^	^	^	^	^	body	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Constant	value	10	^	^	kind	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
FloatingWatcher	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	Whenever	your	hero	takes	damage	on	your	turn	,	gain	+	2	/	+	2	.
Module	body	ClassDef	name	FloatingWatcher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	FloatingWatcher	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterDamaged	^	^	^	^	args	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	IsHero	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	OwnersTurn	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
GnomishExperimenter	NAME_END	3	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Draw	a	card	.	If	it's	a	minion	,	transform	it	into	a	Chicken	.
Module	body	ClassDef	name	GnomishExperimenter	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	GnomishExperimenter	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	GnomishChicken	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	LastDrawnSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Matches	^	^	^	^	args	Call	func	Name	id	LastDrawnSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
IronJuggernaut	NAME_END	6	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Shuffle	a	Mine	into	your	opponent's	deck	.	When	drawn	,	it	explodes	for	10	damage	.
Module	body	ClassDef	name	IronJuggernaut	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	IronJuggernaut	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	BurrowingMine	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	add_to_deck	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	6	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
MadderBomber	NAME_END	5	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Deal	6	damage	randomly	split	between	all	other	characters	.
Module	body	ClassDef	name	MadderBomber	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	MadderBomber	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	Constant	value	6	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	5	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
MiniMage	NAME_END	4	ATK_END	1	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Stealth	</b>	NL	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	MiniMage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	MiniMage	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	keyword	arg	stealth	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	keyword	arg	spell_damage	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
PilotedSkyGolem	NAME_END	6	ATK_END	4	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	<b>	Deathrattle	</b>	Summon	a	random	4	-	Cost	minion	.
Module	body	ClassDef	name	PilotedSkyGolem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	PilotedSkyGolem	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	6	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	ManaCost	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ScarletPurifier	NAME_END	4	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Deal	2	damage	to	all	minions	with	<b>	Deathrattle	</b>	.
Module	body	ClassDef	name	ScarletPurifier	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ScarletPurifier	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	MinionHasDeathrattle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SiltfinSpiritwalker	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Murloc	RACE_END	Epic	RARITY_END	Whenever	another	friendly	Murloc	dies	,	draw	a	card	.	<b>	Overload	</b>	(	1	)
Module	body	ClassDef	name	SiltfinSpiritwalker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SiltfinSpiritwalker	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	keyword	arg	overload	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
TinkertownTechnician	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	If	you	have	a	Mech	,	gain	+	1	/	+	1	and	add	a	<b>	Spare	Part	</b>	to	your	hand	.
Module	body	ClassDef	name	TinkertownTechnician	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.spells.neutral	^	^	names	alias	name	spare_part_list	^	^	asname	^	^	^	level	0	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	TinkertownTechnician	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Constant	value	0	^	^	kind	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	spare_part_list	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Constant	value	0	^	^	kind	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Voljin	NAME_END	6	ATK_END	2	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Swap	Health	with	another	minion	.
Module	body	ClassDef	name	Voljin	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Voljin	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	SwapStats	^	^	^	^	args	Constant	value	health	^	^	kind	^	^	Constant	value	health	^	^	kind	^	^	Constant	value	True	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	6	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
DeathsBite	NAME_END	4	ATK_END	-1	DEF_END	4	COST_END	2	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Deal	1	damage	to	all	minions	.
Module	body	ClassDef	name	DeathsBite	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	DeathsBite	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Maexxna	NAME_END	2	ATK_END	8	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	Destroy	any	minion	damaged	by	this	minion	.
Module	body	ClassDef	name	Maexxna	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Maexxna	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	8	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	DidDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SludgeBelcher	NAME_END	3	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	.	NL	Deathrattle	</b>	Summon	a	1	/	2	Slime	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	SludgeBelcher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SludgeBelcher	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Slime	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Voidcaller	NAME_END	3	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Put	a	random	Demon	from	your	hand	into	the	battlefield	.
Module	body	ClassDef	name	Voidcaller	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Voidcaller	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	MY_HAND	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Alexstrasza	NAME_END	8	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Set	a	hero's	remaining	Health	to	15	.
Module	body	ClassDef	name	Alexstrasza	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Alexstrasza	^	^	kind	^	^	Constant	value	9	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	SetHealth	^	^	^	^	args	Constant	value	15	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	8	^	^	kind	^	^	Constant	value	8	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ArcaneGolem	NAME_END	4	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Charge	</b>	.	<b>	Battlecry	</b>	Give	your	opponent	a	Mana	Crystal	.
Module	body	ClassDef	name	ArcaneGolem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ArcaneGolem	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveManaCrystal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	charge	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
BaineBloodhoof	NAME_END	4	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	BaineBloodhoof	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	BaineBloodhoof	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	Constant	value	False	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
BladeFlurry	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Destroy	your	weapon	and	deal	its	damage	to	all	enemies	.
Module	body	ClassDef	name	BladeFlurry	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	BladeFlurry	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	ops	IsNot	^	^	comparators	Constant	value	^	kind	^	^	^	^	^	body	Assign	targets	Name	id	attack_power	^	^	^	^	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	attr	destroy	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Name	id	attack_power	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Name	id	attack_power	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Brawl	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Destroy	all	minions	except	one	.	<i>	(	chosen	randomly	)	</i>
Module	body	ClassDef	name	Brawl	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Brawl	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	can_use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	BinOp	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	op	Add	^	^	right	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	^	ops	GtE	^	^	comparators	Constant	value	2	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minions	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	minions	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Constant	value	1	^	^	kind	^	^	^	^	^	body	Assign	targets	Name	id	survivor	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	minions	^	^	^	^	body	If	test	Compare	left	Name	id	minion	^	^	^	^	ops	IsNot	^	^	comparators	Name	id	survivor	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	type_comment	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Conceal	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	minions	<b>	Stealth	</b>	until	your	next	turn	.
Module	body	ClassDef	name	Conceal	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Conceal	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	If	test	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	minion	^	^	^	^	attr	stealth	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Stealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
DefenderMinion	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	DefenderMinion	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Defender	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	p	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Doomguard	NAME_END	5	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Rare	RARITY_END	<b>	Charge	</b>	.	<b>	Battlecry	</b>	Discard	two	random	cards	.
Module	body	ClassDef	name	Doomguard	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Doomguard	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Discard	^	^	^	^	args	empty	^	^	keywords	keyword	arg	amount	^	^	value	Constant	value	2	^	^	kind	^	^	^	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	5	^	^	kind	^	^	Constant	value	7	^	^	kind	^	^	^	keywords	keyword	arg	charge	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
EarthElemental	NAME_END	7	ATK_END	8	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Taunt	</b>	.	<b>	Overload	</b>	(	3	)
Module	body	ClassDef	name	EarthElemental	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	EarthElemental	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Constant	value	3	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	7	^	^	kind	^	^	Constant	value	8	^	^	kind	^	^	^	keywords	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ExplosiveTrap	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	your	hero	is	attacked	,	deal	$	2	damage	to	all	enemies	.
Module	body	ClassDef	name	ExplosiveTrap	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ExplosiveTrap	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	activate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	bind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	deactivate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	unbind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	_reveal	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	attacker	^	^	annotation	^	type_comment	^	^	arg	arg	target	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Call	func	Name	id	isinstance	^	^	^	^	args	Name	id	target	^	^	^	Name	id	Hero	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	game	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	attacker	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	type_comment	^	^	Assign	targets	Name	id	enemies	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	enemies	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	enemy	^	^	^	^	iter	Name	id	enemies	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	enemy	^	^	^	^	attr	damage	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	check_delayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
FlameOfAzzinoth	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	FlameOfAzzinoth	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	FlameofAzzinoth	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	Constant	value	False	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Gnoll	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Gnoll	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Gnoll	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	Constant	value	False	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	taunt	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
HolyWrath	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Draw	a	card	and	deal	damage	equal	to	its	cost	.
Module	body	ClassDef	name	HolyWrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	HolyWrath	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	fatigue	^	^	^	^	value	Constant	value	False	^	^	kind	^	^	^	type_comment	^	^	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	deck	^	^	^	^	attr	left	^	^	^	^	ops	Eq	^	^	comparators	Constant	value	0	^	^	kind	^	^	^	^	^	body	Assign	targets	Name	id	fatigue	^	^	^	^	value	Constant	value	True	^	^	kind	^	^	^	type_comment	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	If	test	UnaryOp	op	Not	^	^	operand	Name	id	fatigue	^	^	^	^	^	^	body	Assign	targets	Name	id	cost	^	^	^	^	value	Attribute	value	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	slice	UnaryOp	op	USub	^	^	operand	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	attr	mana	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Name	id	cost	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Infernal	NAME_END	6	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Infernal	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Infernal	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	Constant	value	False	^	^	kind	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	6	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
KirinTorMage	NAME_END	4	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	The	next	<b>	Secret	</b>	you	play	this	turn	costs	(	0	)	.
Module	body	ClassDef	name	KirinTorMage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	KirinTorMage	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveAura	^	^	^	^	args	List	elts	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Constant	value	100	^	^	kind	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	CardPlayed	^	^	^	^	args	Call	func	Name	id	IsSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	4	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Lightwarden	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	a	character	is	healed	,	gain	+	2	Attack	.
Module	body	ClassDef	name	Lightwarden	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Lightwarden	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterHealed	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ManaWraith	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	ALL	minions	cost	(	1	)	more	.
Module	body	ClassDef	name	ManaWraith	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ManaWraith	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Misdirection	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Secret	</b>	When	a	character	attacks	your	hero	,	instead	he	attacks	another	random	character	.
Module	body	ClassDef	name	Misdirection	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Misdirection	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	activate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	bind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	deactivate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	unbind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	_reveal	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	character	^	^	annotation	^	type_comment	^	^	arg	arg	target	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Call	func	Name	id	isinstance	^	^	^	^	args	Name	id	target	^	^	^	Name	id	Hero	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	character	^	^	^	^	attr	removed	^	^	^	^	^	^	^	^	body	Assign	targets	Name	id	game	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	character	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	type_comment	^	^	Assign	targets	Name	id	possibilities	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	possibilities	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	possibilities	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	possibilities	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	possibilities	^	^	^	^	attr	remove	^	^	^	^	args	Attribute	value	Name	id	character	^	^	^	^	attr	current_target	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	character	^	^	^	^	attr	current_target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	possibilities	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
NobleSacrifice	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	an	enemy	attacks	,	summon	a	2	/	1	Defender	as	the	new	target	.
Module	body	ClassDef	name	NobleSacrifice	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	NobleSacrifice	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	_reveal	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	attacker	^	^	annotation	^	type_comment	^	^	arg	arg	target	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Assign	targets	Name	id	player	^	^	^	^	value	Attribute	value	Attribute	value	Attribute	value	Name	id	attacker	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	attr	other_player	^	^	^	^	type_comment	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Constant	value	7	^	^	kind	^	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	attacker	^	^	^	^	attr	removed	^	^	^	^	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.minions.paladin	^	^	names	alias	name	DefenderMinion	^	^	asname	^	^	^	level	0	^	^	^	Assign	targets	Name	id	defender	^	^	^	^	value	Call	func	Name	id	DefenderMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	defender	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	attacker	^	^	^	^	attr	current_target	^	^	^	^	value	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	slice	UnaryOp	op	USub	^	^	operand	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	activate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	bind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	deactivate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	unbind	^	^	^	^	args	Constant	value	character_attack	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
PowerOfTheWild	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Choose	One	</b>	-	Give	your	minions	+	1	/	+	1	;	or	Summon	a	3	/	2	Panther	.
Module	body	ClassDef	name	PowerOfTheWild	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	PoweroftheWild	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	List	elts	Call	func	Name	id	LeaderOfThePack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SummonPanther	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	option	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Redemption	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	one	of	your	minions	dies	,	return	it	to	life	with	1	Health	.
Module	body	ClassDef	name	Redemption	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Redemption	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	_reveal	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	minion	^	^	annotation	^	type_comment	^	^	arg	arg	by	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Assign	targets	Name	id	resurrection	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	attr	summon	^	^	^	^	args	Attribute	value	Name	id	minion	^	^	^	^	attr	player	^	^	^	Attribute	value	Name	id	minion	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	min	^	^	^	^	args	Attribute	value	Name	id	minion	^	^	^	^	attr	index	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	If	test	Name	id	resurrection	^	^	^	^	body	Assign	targets	Attribute	value	Name	id	resurrection	^	^	^	^	attr	health	^	^	^	^	value	Constant	value	1	^	^	kind	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	activate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind	^	^	^	^	args	Constant	value	minion_died	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	deactivate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	unbind	^	^	^	^	args	Constant	value	minion_died	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ShadowMadness	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Gain	control	of	an	enemy	minion	with	3	or	less	Attack	until	end	of	turn	.
Module	body	ClassDef	name	ShadowMadness	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ShadowMadness	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	posonlyargs	empty	^	^	args	arg	arg	target	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	ops	LtE	^	^	comparators	Constant	value	3	^	^	kind	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minion	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	copy	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	minion	^	^	^	^	attr	active	^	^	^	^	value	Constant	value	True	^	^	kind	^	^	^	type_comment	^	^	Assign	targets	Attribute	value	Name	id	minion	^	^	^	^	attr	exhausted	^	^	^	^	value	Constant	value	False	^	^	kind	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	remove_from_board	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	add_to_board	^	^	^	^	args	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Stolen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	can_use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Constant	value	7	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SiphonSoul	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Destroy	a	minion	.	Restore	#	3	Health	to	your	hero	.
Module	body	ClassDef	name	SiphonSoul	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SiphonSoul	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Spellbender	NAME_END	1	ATK_END	3	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	NIL
Module	body	ClassDef	name	Spellbender	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Spellbender	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Constant	value	^	kind	^	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	_reveal	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	card	^	^	annotation	^	type_comment	^	^	arg	arg	index	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	is_spell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Constant	value	7	^	^	kind	^	^	^	^	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	Call	func	Attribute	value	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	SpellbenderMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	slice	UnaryOp	op	USub	^	^	operand	Constant	value	1	^	^	kind	^	^	^	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	activate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Constant	value	card_played	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	deactivate	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Constant	value	card_played	^	^	kind	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Constant	value	^	kind	^	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SummoningPortal	NAME_END	0	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Your	minions	cost	(	2	)	less	,	but	not	less	than	(	1	)	.
Module	body	ClassDef	name	SummoningPortal	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SummoningPortal	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	0	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Constant	value	2	^	^	kind	^	^	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	keyword	arg	minimum	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
ThrallmarFarseer	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Windfury	</b>
Module	body	ClassDef	name	ThrallmarFarseer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	ThrallmarFarseer	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	3	^	^	kind	^	^	^	keywords	keyword	arg	windfury	^	^	value	Constant	value	True	^	^	kind	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Upgrade	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	If	you	have	a	weapon	,	give	it	+	1	/	+	1	.	Otherwise	equip	a	1	/	3	weapon	.
Module	body	ClassDef	name	Upgrade	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Upgrade!	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ImportFrom	module	hearthbreaker.cards.weapons.warrior	^	^	names	alias	name	HeavyAxe	^	^	asname	^	^	^	level	0	^	^	^	If	test	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	body	AugAssign	target	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	attr	durability	^	^	^	^	op	Add	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	AugAssign	target	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	attr	base_attack	^	^	^	^	op	Add	^	^	value	Constant	value	1	^	^	kind	^	^	^	^	^	orelse	Assign	targets	Name	id	heavy_axe	^	^	^	^	value	Call	func	Attribute	value	Call	func	Name	id	HeavyAxe	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	create_weapon	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	type_comment	^	^	Expr	value	Call	func	Attribute	value	Name	id	heavy_axe	^	^	^	^	attr	equip	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
Wisp	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Wisp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	Wisp	^	^	kind	^	^	Constant	value	0	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
BlackWhelp	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	BlackWhelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	BlackWhelp	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	Constant	value	False	^	^	kind	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	2	^	^	kind	^	^	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
DragonkinSorcerer	NAME_END	3	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Common	RARITY_END	Whenever	<b>	you	</b>	target	this	minion	with	a	spell	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	DragonkinSorcerer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	DragonkinSorcerer	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	3	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellTargeted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	List	elts	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
HungryDragon	NAME_END	5	ATK_END	6	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Summon	a	random	1	-	Cost	minion	for	your	opponent	.
Module	body	ClassDef	name	HungryDragon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	HungryDragon	^	^	kind	^	^	Constant	value	4	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	ManaCost	^	^	^	^	args	Constant	value	1	^	^	kind	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	create_minion	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Constant	value	5	^	^	kind	^	^	Constant	value	6	^	^	kind	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
SolemnVigil	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Draw	2	cards	.	Costs	(	1	)	less	for	each	minion	that	died	this	turn	.
Module	body	ClassDef	name	SolemnVigil	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Constant	value	SolemnVigil	^	^	kind	^	^	Constant	value	5	^	^	kind	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	DeadMinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Constant	value	1	^	^	kind	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	type_comment	^	^	FunctionDef	name	use	^	^	args	arguments	posonlyargs	empty	^	^	args	arg	arg	self	^	^	annotation	^	type_comment	^	^	arg	arg	player	^	^	annotation	^	type_comment	^	^	arg	arg	game	^	^	annotation	^	type_comment	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	n	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Constant	value	0	^	^	kind	^	^	Constant	value	2	^	^	kind	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	type_comment	^	^	^	returns	^	type_comment	^	^	^	^	^	type_ignores	empty	^	^	^	
